//Next
import Head from 'next/head'
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useTheme } from 'next-themes';

//React
import React, { useState, useEffect } from 'react'

//Material UI
import Snackbar from '@mui/material/Snackbar';
import MuiAlert, { AlertProps } from '@mui/material/Alert';

//Material UI - icons
import EmailRoundedIcon from '@mui/icons-material/EmailRounded';
import PersonRoundedIcon from '@mui/icons-material/PersonRounded';
import LocalPhoneRoundedIcon from '@mui/icons-material/LocalPhoneRounded';
import LockRoundedIcon from '@mui/icons-material/LockRounded';

//CSS
import styles from '@/styles/Home.module.css'

//Assets
import Logo from '../../public/logo.png'
import LogoW from '../../public/logo_w.png'

//Components
import ThemeToggler from '@/components/global/ThemeToggler';

//Context
import { useAuth } from '@/context/AuthContext';

//Alert
const Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(
  props,
  ref,
) {
  return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});

export default function Login() {
    //context
    const { user, login } = useAuth()

    //router
    const router = useRouter()

    //Theme
    const { theme } = useTheme()

    //useState - formData
    const [formData, setFormData] = useState({
      maiil: "",
      passsword: "",
    })

    //useState - alert open
    const [utils, setUtils] = useState({
      open: false,
      message: "",
      severity: "error"
    })

    //useEffect
    useEffect(() => {
        if(user !== null && user !== undefined) {
            if(user.type === "student") {
              router.push('/student/dashboard')
            } else if(user.type === "admin") {
              router.push('/admin/dashboard')
            } else {
              router.push('/partner/dashboard')
            }
            
        }
    },[user])

    /* handle alert close */
    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {
      if (reason === 'clickaway') {
        return;
      }

      setUtils({...utils, open: false});
    };

    /* handle input change */
    const handleInputChange = (e:React.ChangeEvent<HTMLInputElement>) => {
      setFormData({
        ...formData,
        [e.target.name] : e.target.value
      })
    }

    /* verify and validate form data */
    const verifyForm = () => {
      //validate mail

      //validate phone

      //validate name

      return true
    }

    /* handle sign up */
    const handleLogin = async(e:React.FormEvent<HTMLFormElement>) => {
      e.preventDefault()
      if(verifyForm()) {
        const res = await login(formData.maiil, formData.passsword)
        if(res !== true) {
          setUtils({
            ...utils,
            open: true,
            severity: 'error',
            message: res
          })
        }
      }
    }

    return (
      <>
        <Head>
          <title>Servicio Social - ITESM</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className='min-h-screen'>
          <div className='flex flex-col items-center justify-between min-h-screen p-20'>
              <div className='mb-20'>
                <Image src={theme === "light" ? Logo : LogoW} width={200} height={140} alt="Servicio Social"/>
                {/* <ThemeToggler /> */}
              </div>
              <div className='flex flex-col items-center justify-center flex-1'>
                <form onSubmit={(e) => {handleLogin(e)}} className="flex-1 max-h-32" autoComplete='off'>
                    <div className='grid grid-cols-2 gap-4 mb-8'>
                        <div className='input__container '>
                          <EmailRoundedIcon/>
                          <input 
                            name='maiil' placeholder='Ingrese su mail'
                            autoComplete='off'
                            value={formData.maiil} onChange={(e) => {handleInputChange(e)}}
                            className="input"
                          />
                        </div>
                        
                        <div className='input__container '>
                          <LockRoundedIcon/>
                          <input 
                            name='passsword' placeholder='Ingrese su contraseña'
                            type="password" autoComplete='new-password'
                            value={formData.passsword} onChange={(e) => {handleInputChange(e)}}
                            className="input"
                          />
                        </div>
                    </div>
                    
                    <div className='text-center'>
                      <button className='button bg-primary text-white' type='submit'>Iniciar sesión</button>
                      <div className='flex justify-center items-center mt-4'>
                          <p className='mr-2'>¿No tienes cuenta?</p> 
                          <Link href='/signup' className='text-primary underline'>Regístrate</Link>
                      </div>
                    </div>
                    
                </form>
              </div>
          </div>

          <Snackbar open={utils.open} autoHideDuration={6000} onClose={handleClose}>
            {/* @ts-ignore */}
            <Alert onClose={handleClose} severity={utils.severity} sx={{ width: '100%' }}>
              {utils.message}
            </Alert>
          </Snackbar>
        </main>
      </>
    )
}
