//Next
import Head from 'next/head'
import Image from 'next/image';
import { useRouter } from 'next/router';

//React
import React, { useState, useEffect } from 'react'

//Material UI
import Snackbar from '@mui/material/Snackbar';
import MuiAlert, { AlertProps } from '@mui/material/Alert';

//Material UI - icons

//Components
import SideBar from '@/components/global/Sidebar';
import Project from '@/components/student/Project';

//Context
import { useAuth } from '@/context/AuthContext';
import { useProjects } from '@/context/ProjectsContext';

//interfaces
import ProjectInt from '@/utils/interfaces/Project.interface';

//Alert
const Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(
  props,
  ref,
) {
  return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});

export default function Favorites() {
    //context
    const { user, login } = useAuth()
    const { favs, deleteFav } = useProjects()

    //router
    const router = useRouter()

    //useState
    const [projectsList, setProjectsList] = useState([])

    //useState - formData
    const [formData, setFormData] = useState({
      maiil: "",
      passsword: "",
    })

    //useState - alert open
    const [utils, setUtils] = useState({
      open: false,
      message: "",
      severity: "error"
    })

    //useEffect
    useEffect(() => {
        if(user && favs) {
          if(favs.length !== 0){
            setProjectsList(favs)
          }
        }
    },[favs])

    const handleDeleteFromFav = (uid:string) => {
      console.log(uid)
      let data = [...projectsList]
      data = data.filter((el:ProjectInt) => el.uid !== uid)
      setProjectsList(data)
    }

    return (
      <>
        <Head>
          <title>Servicio Social - ITESM</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className=''>
            <SideBar/>
            <div className='lg:w-[calc(100%-176px)] min-h-screen bg-light dark:bg-dark lg:left-44 relative p-10'>
                <div className='max-w-4xl m-auto'>

                {/* title */}
                <div className='flex justify-between items-center mb-10'>
                  <h1 className='title'>Tus Favoritos</h1>
                  
                </div>
                

                {/* project list */}
                <div>
                    {projectsList.length !== 0 && projectsList.map((item:ProjectInt, i:number) => (
                      <Project key={i} project={item} deleteFromFav={handleDeleteFromFav}/>
                    ))}
                </div>
              </div>
            </div>
        </main>
      </>
    )
}
